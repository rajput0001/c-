#include <iostream>
using namespace std;

class stack {
    // properties
    public:
    int size;
    int *arr;
    int top;
    
    // behaviour
    stack(int size){
        this-> size =size;
        arr = new int[size];
        top = -1;
    }
    
    void push(int element){
        if(size-top>1 ){
           top++;
           arr[top]=element;
        }
        else{
            cout<<"stack overflow "<<endl;
        }
     }
    
    void pop( ){
        if(top>=0){
            top--;
        }
        else{
            cout<<"stack underflow "<<endl;
        }
    }
    int peek(){
        if(top>=0){
            return arr[top];
        }
        else{
            cout<<"stack is empty "<<endl;
            return -1;
        }
    }
    
    bool isempty(){
        if(top==-1){
           return true;
        }
        else{
        return false;
    }
    }
    
    
   };

int main() {
    stack st(5);
    
    st.push(10);
   st.push(20);
   st.push(30);
   
   cout<<st.peek()<<endl;
   st.pop();
   
    cout<<st.peek()<<endl;
     st.pop();
     
    cout<<st.peek()<<endl;
     st.pop();
     
     st.pop();
     
     if( st.isempty()){
         cout<<"stack is empty "<<endl;
     }
     else{
         cout<<"Stack is not empty"<<endl;

     }
   
   
   
   return 0;
}
